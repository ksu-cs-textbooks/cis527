<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps :: CIS 527 Textbook</title><link>https://textbooks.cs.ksu.edu/cis527/7-backups-monitoring-devops/02-devops/index.html</link><description>Resources Slides Extras - Git CS GitLab DevOps on Wikipedia Infrastructure as Code on Wikipedia What is DevOps? from Amazon Web Services What Is DevOps? from The Agile Admin DevOps: Breaking the Development-Operations Barrier from Atlassian Periodic Table of DevOps Tools from XebiaLabs The Ultimate DevOps Tool Chest from XebiaLabs webhook on GitHub webhook Hook Examples on GitHub Webhooks on GitLab Documentation Video Transcript One of the hottest new terms in system administration and software development today is DevOps. DevOps is a shortened form of “Development Operations,” and encompasses many different ideas and techniques in a single term. I like to think of it as the application of the Agile software development process to system engineering. Just as software developers are focusing on more frequent releases and flexible processes, system administrators have to react to quickly changing needs and environments. In addition, DevOps engineers are responsible for automating much of the software development lifecycle, allowing developers to spend more time coding and less time running builds and tests manually. Finally, to accommodate many of these changes, DevOps engineers have increasingly adapted the concept of “infrastructure as code,” allowing them to define their system configurations and more using tools such as Puppet and Ansible in lieu of doing it manually. As we saw in Module 2, that approach can be quite powerful.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis527/7-backups-monitoring-devops/02-devops/index.xml" rel="self" type="application/rss+xml"/></channel></rss>