<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://textbooks.cs.ksu.edu/cis527/5a-containers/07-developing-slides/index.html</link><description>CIS 527
Lab 5.A - Developing with Containers
Developing with ContainersDockerfileDocker ComposeDevelop in DockerCI/CD PipelinesDockerfile# For more information, please refer to https://aka.ms/vscode-docker-pythonFROM python:3.8-slimEXPOSE 5000# Keeps Python from generating .pyc files in the containerENV PYTHONDONTWRITEBYTECODE=1# Turns off buffering for easier container loggingENV PYTHONUNBUFFERED=1# Install pip requirementsCOPY requirements.txt .RUN python -m pip install -r requirements.txtWORKDIR /appCOPY . /app# Creates a non-root user with an explicit UID and adds permission to access the /app folder# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containersRUN adduser -u 5678 --disabled-password --gecos "" appuser &amp;&amp; chown -R appuser /appUSER appuser# During debugging, this entry point will be overridden. For more information, # please refer to https://aka.ms/vscode-docker-python-debugCMD ["gunicorn", "--bind", "0.0.0.0:5000", "wsgi:app"]Docker Composeservices:mysql:image: mysql:5.7container_name: mysqlrestart: unless-stoppedports:- '3306:3306'environment:MYSQL_DATABASE: officehoursMYSQL_USER: officehoursMYSQL_PASSWORD: passwordMYSQL_RANDOM_ROOT_PASSWORD: factphpmyadmin:image: phpmyadmin:latestcontainer_name: phpmyadminrestart: unless-stoppedports:- '8080:80'environment:PMA_ARBITRARY: 1Develop in DockerImage Source: Visual Studio Code</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis527/5a-containers/07-developing-slides/index.xml" rel="self" type="application/rss+xml"/></channel></rss>